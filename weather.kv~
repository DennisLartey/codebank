#: import main main
#: import ListAdapter kivy.adapters.listadapter.ListAdapter

WeatherRoot:

<WeatherRoot>:
	AddLocationForm

<AddLocationForm>:
	orientation: "vertical"
	search_input: search_box
	search_results: search_results_list
	
			
	BoxLayout:
		height: "40dp"
		size_hint_y: None

		TextInput:
			id: search_box
			size_hint_X: 50
			focus: True
			multiline: False
			on_text_validate: root.search_location()
		Button:
			text: "Search"
			size_hint_X: 25
			on_press: root.search_location()
		Button:
			text: "Current Location"
			size_hint_X: 25
	ListView:
		id: search_results_list
		adapter:
			ListAdapter(data=[], cls=main.LocationButton, args_converter=root.args_converter)
	Button: 
		height: "40dp"
		size_hint_y: None
		text: "Cancel"
		on_press: app.root.show_current_weather(None)

<CurrentWeather>:
	orientation: "vertical"
	conditions: conditions
	BoxLayout:
		Label:
			text: "{} ({})".format(root.location[0], root.location[1])
			font_size: "30dp"
		Label:
			text: "{}".format(root.temp)
			font_size: "30dp"
	BoxLayout:
		id: conditions

	BoxLayout:
		orientation: "horizontal"
		Label:
			text: "Low: {}".format(root.temp_min)
		Label:
			text: "High: {}".format(root.temp_max)


	BoxLayout:
		orientation: "horizontal"
		size_hint_y: None
		height:"40dp"
		Button:
			text: "Add Location"
			on_press: app.root.show_add_location_form()
		Button:
			text: "Forecast"
	BoxLayout:
		orientation: "horizontal"
		Label:
			text: root.conditions
		AsyncImage:
			source: root.conditions_image
			
<LocationButton>:
	text: "{} ({})".format(self.location[0], self.location[1])
	height: "40dp"
	size_hint_y: None
	on_press: app.root.show_current_weather(self.location)

<UnknownConditions@Conditions>:
	canvas.before:
		Color:
			rgb: [0.2, 0.2, 0.2]
		Ellipse:
			pos: self.pos
			size: self.size
	
<Conditions>:
	Label:
		text: root.conditions

<ClearConditions@Conditions>:
	canvas.before:
		Color:
			rgb: [0.8, 0.7, 0.3]
		Line:
			cap: "round"
			width: 3
			points:
				[self.center_x - (self.height / 2),
				self.center_y,
				self.center_x + (self.height / 2),
				self.center_y]
		Line:
			cap: "round"
			width: 3
			points:
				[self.center_x,
				self.center_y - (self.height / 2),
				self.center_x,
				self.center_y + (self.height / 2)]
		Line:
			cap: "round"
			width: 3
			points:
				[self.center_x - (self.height * .35355),
				self.center_y - (self.height * .35355),
				self.center_x + (self.height * .35355),
				self.center_y + (self.height * .35355)]
		Line:
			cap: "round"
			width: 3
			points:
				[self.center_x - (self.height * .35355),
				self.center_y + (self.height * .35355),
				self.center_x + (self.height * .35355),
				self.center_y - (self.height * .35355)]
		Color:
			rgb: [0.6, 0.5, 0.0]
		Ellipse:
			pos: self.center_x - ((self.height - 40) / 2), self.pos[1] + 20
			size: [self.height - 40, self.height - 40]
	
